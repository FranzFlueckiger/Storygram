{"id":"node_modules/vega-dataflow/src/util/asyncCallback.js","dependencies":[{"name":"/Users/franzfluckiger/Documents/Software/knot-diagram/package.json","includedInParent":true,"mtime":1569326798571},{"name":"/Users/franzfluckiger/Documents/Software/knot-diagram/node_modules/vega-dataflow/package.json","includedInParent":true,"mtime":1569336137111}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\n/**\n * Invoke and await a potentially async callback function. If\n * an error occurs, trap it and route to Dataflow.error.\n * @param {Dataflow} df - The dataflow instance\n * @param {function} callback - A callback function to invoke\n *   and then await. The dataflow will be passed as the single\n *   argument to the function.\n */\nasync function _default(df, callback) {\n  try {\n    await callback(df);\n  } catch (err) {\n    df.error(err);\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":1,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":9,"column":15}},{"name":"df","generated":{"line":16,"column":24},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":9,"column":30}},{"generated":{"line":16,"column":26},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":9,"column":15}},{"name":"callback","generated":{"line":16,"column":28},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":9,"column":34}},{"generated":{"line":16,"column":36},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":9,"column":15}},{"generated":{"line":16,"column":38},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":9,"column":44}},{"generated":{"line":17,"column":0},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":2}},{"generated":{"line":17,"column":6},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":6}},{"generated":{"line":18,"column":0},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":8}},{"name":"callback","generated":{"line":18,"column":10},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":14}},{"generated":{"line":18,"column":18},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":22}},{"name":"df","generated":{"line":18,"column":19},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":23}},{"generated":{"line":18,"column":21},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":22}},{"generated":{"line":18,"column":22},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":8}},{"generated":{"line":19,"column":0},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":29}},{"generated":{"line":19,"column":3},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":2}},{"generated":{"line":19,"column":4},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":30}},{"name":"err","generated":{"line":19,"column":11},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":37}},{"generated":{"line":19,"column":14},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":30}},{"generated":{"line":19,"column":16},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":42}},{"name":"df","generated":{"line":20,"column":0},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":44}},{"name":"df","generated":{"line":20,"column":4},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":44}},{"generated":{"line":20,"column":6},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":46}},{"name":"error","generated":{"line":20,"column":7},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":47}},{"generated":{"line":20,"column":12},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":44}},{"name":"err","generated":{"line":20,"column":13},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":53}},{"generated":{"line":20,"column":16},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":44}},{"generated":{"line":21,"column":0},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":10,"column":60}},{"generated":{"line":22,"column":0},"source":"node_modules/vega-dataflow/src/util/asyncCallback.js","original":{"line":11,"column":1}}],"sources":{"node_modules/vega-dataflow/src/util/asyncCallback.js":"/**\n * Invoke and await a potentially async callback function. If\n * an error occurs, trap it and route to Dataflow.error.\n * @param {Dataflow} df - The dataflow instance\n * @param {function} callback - A callback function to invoke\n *   and then await. The dataflow will be passed as the single\n *   argument to the function.\n */\nexport default async function(df, callback) {\n  try { await callback(df); } catch (err) { df.error(err); }\n}\n"},"lineCount":null}},"error":null,"hash":"ae3e6c21f57547a235813a73b4b4f352","cacheData":{"env":{}}}