{"id":"node_modules/vega-lite/build/src/compile/signal.js","dependencies":[{"name":"/Users/franzfluckiger/Documents/Software/knot-diagram/node_modules/vega-lite/build/src/compile/signal.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/franzfluckiger/Documents/Software/knot-diagram/package.json","includedInParent":true,"mtime":1570375771013},{"name":"/Users/franzfluckiger/Documents/Software/knot-diagram/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SignalRefWrapper = void 0;\n\n/**\n * A class that behaves like a SignalRef but lazily generates the signal.\n * The provided generator function should use `Model.getSignalName` to use the correct signal name.\n */\nclass SignalRefWrapper {\n  constructor(exprGenerator) {\n    Object.defineProperty(this, 'signal', {\n      enumerable: true,\n      get: exprGenerator\n    });\n  }\n\n  static fromName(rename, signalName) {\n    return new SignalRefWrapper(() => rename(signalName));\n  }\n\n}\n\nexports.SignalRefWrapper = SignalRefWrapper;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":9,"column":13},"generated":{"line":12,"column":6}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":12,"column":22}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":9,"column":29},"generated":{"line":12,"column":23}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":13,"column":0}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":13,"column":2}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":13,"column":13}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":10,"column":14},"generated":{"line":13,"column":14}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":13,"column":27}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":10,"column":41},"generated":{"line":13,"column":29}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":14,"column":0}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":14,"column":4}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":11,"column":10},"generated":{"line":14,"column":10}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":11,"column":11},"generated":{"line":14,"column":11}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":14,"column":25}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":11,"column":26},"generated":{"line":14,"column":26}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":14,"column":30}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":11,"column":32},"generated":{"line":14,"column":32}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":14,"column":40}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":11,"column":42},"generated":{"line":14,"column":42}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":12,"column":6},"generated":{"line":15,"column":0}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":12,"column":6},"generated":{"line":15,"column":6}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":12,"column":16},"generated":{"line":15,"column":16}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":12,"column":18},"generated":{"line":15,"column":18}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":11,"column":42},"generated":{"line":15,"column":22}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":13,"column":6},"generated":{"line":16,"column":0}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":13,"column":6},"generated":{"line":16,"column":6}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":13,"column":9},"generated":{"line":16,"column":9}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":13,"column":11},"generated":{"line":16,"column":11}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":11,"column":42},"generated":{"line":17,"column":0}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":17,"column":5}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":15,"column":3},"generated":{"line":18,"column":0}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":20,"column":0}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":19,"column":16},"generated":{"line":20,"column":9}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":20,"column":17}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":19,"column":25},"generated":{"line":20,"column":18}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":20,"column":24}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":19,"column":41},"generated":{"line":20,"column":26}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":20,"column":36}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":19,"column":59},"generated":{"line":20,"column":38}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":21,"column":0}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":20,"column":11},"generated":{"line":21,"column":11}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":20,"column":15},"generated":{"line":21,"column":15}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":20,"column":11},"generated":{"line":21,"column":31}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":20,"column":32},"generated":{"line":21,"column":32}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":20,"column":38},"generated":{"line":21,"column":38}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":20,"column":44},"generated":{"line":21,"column":44}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":20,"column":45},"generated":{"line":21,"column":45}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":20,"column":44},"generated":{"line":21,"column":55}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":20,"column":11},"generated":{"line":21,"column":56}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":21,"column":57}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":21,"column":3},"generated":{"line":22,"column":0}},{"source":"../../../src/compile/signal.ts","name":null,"original":{"line":9,"column":29},"generated":{"line":24,"column":0}}],"sources":{"../../../src/compile/signal.ts":"import {SignalRef} from 'vega';\n\nexport type Rename = (oldSignalName: string) => string;\n\n/**\n * A class that behaves like a SignalRef but lazily generates the signal.\n * The provided generator function should use `Model.getSignalName` to use the correct signal name.\n */\nexport class SignalRefWrapper implements SignalRef {\n  constructor(exprGenerator: () => string) {\n    Object.defineProperty(this, 'signal', {\n      enumerable: true,\n      get: exprGenerator\n    });\n  }\n\n  public signal: string; // for ts\n\n  public static fromName(rename: Rename, signalName: string) {\n    return new SignalRefWrapper(() => rename(signalName));\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"590183a37db19625989c94c235c10494","cacheData":{"env":{}}}