{"id":"node_modules/vega-lite/build/src/compile/guide.js","dependencies":[{"name":"/Users/franzfluckiger/Documents/Software/knot-diagram/node_modules/vega-lite/build/src/compile/guide.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/franzfluckiger/Documents/Software/knot-diagram/package.json","includedInParent":true,"mtime":1570375771013},{"name":"/Users/franzfluckiger/Documents/Software/knot-diagram/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":499162500000},{"name":"../util","loc":{"line":1,"column":21},"parent":"/Users/franzfluckiger/Documents/Software/knot-diagram/node_modules/vega-lite/build/src/compile/guide.js","resolved":"/Users/franzfluckiger/Documents/Software/knot-diagram/node_modules/vega-lite/build/src/util.js"},{"name":"./mark/mixins","loc":{"line":2,"column":30},"parent":"/Users/franzfluckiger/Documents/Software/knot-diagram/node_modules/vega-lite/build/src/compile/guide.js","resolved":"/Users/franzfluckiger/Documents/Software/knot-diagram/node_modules/vega-lite/build/src/compile/mark/mixins.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.guideEncodeEntry = guideEncodeEntry;\n\nvar _util = require(\"../util\");\n\nvar _mixins = require(\"./mark/mixins\");\n\nfunction guideEncodeEntry(encoding, model) {\n  return (0, _util.keys)(encoding).reduce((encode, channel) => {\n    const valueDef = encoding[channel];\n    return Object.assign({}, encode, (0, _mixins.wrapCondition)(model, valueDef, channel, x => ({\n      value: x.value\n    })));\n  }, {});\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":8,"column":16},"generated":{"line":12,"column":9}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":12,"column":25}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":8,"column":33},"generated":{"line":12,"column":26}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":12,"column":34}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":8,"column":63},"generated":{"line":12,"column":36}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":12,"column":41}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":8,"column":79},"generated":{"line":12,"column":43}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":13,"column":0}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":13,"column":9}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":9,"column":14},"generated":{"line":13,"column":25}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":13,"column":33}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":9,"column":24},"generated":{"line":13,"column":35}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":13,"column":41}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":9,"column":31},"generated":{"line":13,"column":42}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":9,"column":32},"generated":{"line":13,"column":43}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":9,"column":31},"generated":{"line":13,"column":49}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":9,"column":40},"generated":{"line":13,"column":51}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":9,"column":31},"generated":{"line":13,"column":58}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":9,"column":68},"generated":{"line":13,"column":63}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":14,"column":0}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":10,"column":10},"generated":{"line":14,"column":10}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":10,"column":18},"generated":{"line":14,"column":18}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":10,"column":21},"generated":{"line":14,"column":21}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":10,"column":29},"generated":{"line":14,"column":29}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":10,"column":30},"generated":{"line":14,"column":30}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":10,"column":29},"generated":{"line":14,"column":37}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":14,"column":38}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":15,"column":0}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":15,"column":11}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":15,"column":17}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":15,"column":18}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":15,"column":24}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":15,"column":25}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":15,"column":27}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":12,"column":9},"generated":{"line":15,"column":29}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":15,"column":35}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":13,"column":9},"generated":{"line":15,"column":37}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":13,"column":23},"generated":{"line":15,"column":64}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":13,"column":9},"generated":{"line":15,"column":69}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":13,"column":30},"generated":{"line":15,"column":71}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":13,"column":9},"generated":{"line":15,"column":79}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":13,"column":40},"generated":{"line":15,"column":81}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":13,"column":9},"generated":{"line":15,"column":88}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":13,"column":50},"generated":{"line":15,"column":90}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":13,"column":49},"generated":{"line":15,"column":91}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":13,"column":67},"generated":{"line":15,"column":96}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":13,"column":68},"generated":{"line":16,"column":0}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":13,"column":68},"generated":{"line":16,"column":6}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":13,"column":73},"generated":{"line":16,"column":11}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":13,"column":75},"generated":{"line":16,"column":13}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":13,"column":76},"generated":{"line":16,"column":14}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":13,"column":77},"generated":{"line":16,"column":15}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":13,"column":67},"generated":{"line":17,"column":0}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":13,"column":49},"generated":{"line":17,"column":5}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":13,"column":9},"generated":{"line":17,"column":6}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":17,"column":7}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":17,"column":8}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":15,"column":3},"generated":{"line":18,"column":0}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":18,"column":3}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":15,"column":5},"generated":{"line":18,"column":5}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":18,"column":7}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":18,"column":8}},{"source":"../../../src/compile/guide.ts","name":null,"original":{"line":16,"column":1},"generated":{"line":19,"column":0}}],"sources":{"../../../src/compile/guide.ts":"import {ValueDef} from '../channeldef';\nimport {GuideEncodingEntry} from '../guide';\nimport {keys} from '../util';\nimport {VgEncodeChannel} from '../vega.schema';\nimport {wrapCondition} from './mark/mixins';\nimport {UnitModel} from './unit';\n\nexport function guideEncodeEntry(encoding: GuideEncodingEntry, model: UnitModel) {\n  return keys(encoding).reduce((encode, channel: VgEncodeChannel) => {\n    const valueDef = encoding[channel];\n    return {\n      ...encode,\n      ...wrapCondition(model, valueDef, channel, (x: ValueDef) => ({value: x.value}))\n    };\n  }, {});\n}\n"},"lineCount":null}},"error":null,"hash":"71137162518590e4f7b28ee31da556fd","cacheData":{"env":{}}}