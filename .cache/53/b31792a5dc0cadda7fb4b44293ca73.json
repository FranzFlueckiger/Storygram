{"id":"node_modules/vega-view/src/render-to-canvas.js","dependencies":[{"name":"/Users/franzfluckiger/Documents/Software/knot-diagram/package.json","includedInParent":true,"mtime":1569326798571},{"name":"/Users/franzfluckiger/Documents/Software/knot-diagram/node_modules/vega-view/package.json","includedInParent":true,"mtime":1569336137108},{"name":"./render-headless","loc":{"line":1,"column":27},"parent":"/Users/franzfluckiger/Documents/Software/knot-diagram/node_modules/vega-view/src/render-to-canvas.js","resolved":"/Users/franzfluckiger/Documents/Software/knot-diagram/node_modules/vega-view/src/render-headless.js"},{"name":"vega-scenegraph","loc":{"line":2,"column":25},"parent":"/Users/franzfluckiger/Documents/Software/knot-diagram/node_modules/vega-view/src/render-to-canvas.js","resolved":"/Users/franzfluckiger/Documents/Software/knot-diagram/node_modules/vega-scenegraph/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _renderHeadless = _interopRequireDefault(require(\"./render-headless\"));\n\nvar _vegaScenegraph = require(\"vega-scenegraph\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Produce a Canvas instance containing a rendered visualization.\n * This method is asynchronous, returning a Promise instance.\n * @return {Promise} - A promise that resolves to a Canvas instance.\n */\nasync function _default(scaleFactor, opt) {\n  const r = await (0, _renderHeadless.default)(this, _vegaScenegraph.RenderType.Canvas, scaleFactor, opt);\n  return r.canvas();\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":4,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":9,"column":15}},{"name":"scaleFactor","generated":{"line":19,"column":24},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":9,"column":30}},{"generated":{"line":19,"column":35},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":9,"column":15}},{"name":"opt","generated":{"line":19,"column":37},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":9,"column":43}},{"generated":{"line":19,"column":40},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":9,"column":15}},{"generated":{"line":19,"column":42},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":9,"column":48}},{"generated":{"line":20,"column":0},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":10,"column":2}},{"name":"r","generated":{"line":20,"column":8},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":10,"column":8}},{"generated":{"line":20,"column":9},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":10,"column":9}},{"generated":{"line":20,"column":12},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":10,"column":12}},{"generated":{"line":20,"column":18},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":10,"column":18}},{"generated":{"line":20,"column":47},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":10,"column":33}},{"generated":{"line":20,"column":51},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":10,"column":18}},{"name":"RenderType","generated":{"line":20,"column":53},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":10,"column":39}},{"name":"Canvas","generated":{"line":20,"column":80},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":10,"column":50}},{"generated":{"line":20,"column":86},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":10,"column":18}},{"name":"scaleFactor","generated":{"line":20,"column":88},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":10,"column":58}},{"generated":{"line":20,"column":99},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":10,"column":18}},{"name":"opt","generated":{"line":20,"column":101},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":10,"column":71}},{"generated":{"line":20,"column":104},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":10,"column":18}},{"generated":{"line":20,"column":105},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":10,"column":2}},{"generated":{"line":21,"column":0},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":11,"column":2}},{"name":"r","generated":{"line":21,"column":9},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":11,"column":9}},{"generated":{"line":21,"column":10},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":11,"column":10}},{"name":"canvas","generated":{"line":21,"column":11},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":11,"column":11}},{"generated":{"line":21,"column":17},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":11,"column":9}},{"generated":{"line":21,"column":19},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":11,"column":2}},{"generated":{"line":22,"column":0},"source":"node_modules/vega-view/src/render-to-canvas.js","original":{"line":12,"column":1}}],"sources":{"node_modules/vega-view/src/render-to-canvas.js":"import renderHeadless from './render-headless';\nimport {RenderType} from 'vega-scenegraph';\n\n/**\n * Produce a Canvas instance containing a rendered visualization.\n * This method is asynchronous, returning a Promise instance.\n * @return {Promise} - A promise that resolves to a Canvas instance.\n */\nexport default async function(scaleFactor, opt) {\n  const r = await renderHeadless(this, RenderType.Canvas, scaleFactor, opt);\n  return r.canvas();\n}\n"},"lineCount":null}},"error":null,"hash":"6fccb4557704de634a219bed99f5b4d6","cacheData":{"env":{}}}