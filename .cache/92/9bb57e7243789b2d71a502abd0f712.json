{"id":"node_modules/vega-lite/build/src/data.js","dependencies":[{"name":"/Users/franzfluckiger/Documents/Software/knot-diagram/node_modules/vega-lite/build/src/data.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/franzfluckiger/Documents/Software/knot-diagram/package.json","includedInParent":true,"mtime":1569326798571},{"name":"/Users/franzfluckiger/Documents/Software/knot-diagram/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isUrlData = isUrlData;\nexports.isInlineData = isInlineData;\nexports.isNamedData = isNamedData;\nexports.isGenerator = isGenerator;\nexports.isSequenceGenerator = isSequenceGenerator;\nexports.isSphereGenerator = isSphereGenerator;\nexports.isGraticuleGenerator = isGraticuleGenerator;\nexports.RAW = exports.MAIN = void 0;\n\nfunction isUrlData(data) {\n  return !!data['url'];\n}\n\nfunction isInlineData(data) {\n  return !!data['values'];\n}\n\nfunction isNamedData(data) {\n  return !!data['name'] && !isUrlData(data) && !isInlineData(data) && !isGenerator(data);\n}\n\nfunction isGenerator(data) {\n  return data && (isSequenceGenerator(data) || isSphereGenerator(data) || isGraticuleGenerator(data));\n}\n\nfunction isSequenceGenerator(data) {\n  return !!data['sequence'];\n}\n\nfunction isSphereGenerator(data) {\n  return !!data['sphere'];\n}\n\nfunction isGraticuleGenerator(data) {\n  return !!data['graticule'];\n}\n\nconst MAIN = 'main';\nexports.MAIN = MAIN;\nconst RAW = 'raw';\nexports.RAW = RAW;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/data.ts","name":null,"original":{"line":121,"column":6},"generated":{"line":15,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":121,"column":16},"generated":{"line":15,"column":9}},{"source":"../../src/data.ts","name":null,"original":{"line":121,"column":6},"generated":{"line":15,"column":18}},{"source":"../../src/data.ts","name":null,"original":{"line":121,"column":26},"generated":{"line":15,"column":19}},{"source":"../../src/data.ts","name":null,"original":{"line":121,"column":6},"generated":{"line":15,"column":23}},{"source":"../../src/data.ts","name":null,"original":{"line":121,"column":63},"generated":{"line":15,"column":25}},{"source":"../../src/data.ts","name":null,"original":{"line":122,"column":2},"generated":{"line":16,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":122,"column":9},"generated":{"line":16,"column":9}},{"source":"../../src/data.ts","name":null,"original":{"line":122,"column":10},"generated":{"line":16,"column":10}},{"source":"../../src/data.ts","name":null,"original":{"line":122,"column":11},"generated":{"line":16,"column":11}},{"source":"../../src/data.ts","name":null,"original":{"line":122,"column":15},"generated":{"line":16,"column":15}},{"source":"../../src/data.ts","name":null,"original":{"line":122,"column":16},"generated":{"line":16,"column":16}},{"source":"../../src/data.ts","name":null,"original":{"line":122,"column":15},"generated":{"line":16,"column":21}},{"source":"../../src/data.ts","name":null,"original":{"line":122,"column":2},"generated":{"line":16,"column":22}},{"source":"../../src/data.ts","name":null,"original":{"line":123,"column":1},"generated":{"line":17,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":125,"column":6},"generated":{"line":19,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":125,"column":16},"generated":{"line":19,"column":9}},{"source":"../../src/data.ts","name":null,"original":{"line":125,"column":6},"generated":{"line":19,"column":21}},{"source":"../../src/data.ts","name":null,"original":{"line":125,"column":29},"generated":{"line":19,"column":22}},{"source":"../../src/data.ts","name":null,"original":{"line":125,"column":6},"generated":{"line":19,"column":26}},{"source":"../../src/data.ts","name":null,"original":{"line":125,"column":66},"generated":{"line":19,"column":28}},{"source":"../../src/data.ts","name":null,"original":{"line":126,"column":2},"generated":{"line":20,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":126,"column":9},"generated":{"line":20,"column":9}},{"source":"../../src/data.ts","name":null,"original":{"line":126,"column":10},"generated":{"line":20,"column":10}},{"source":"../../src/data.ts","name":null,"original":{"line":126,"column":11},"generated":{"line":20,"column":11}},{"source":"../../src/data.ts","name":null,"original":{"line":126,"column":15},"generated":{"line":20,"column":15}},{"source":"../../src/data.ts","name":null,"original":{"line":126,"column":16},"generated":{"line":20,"column":16}},{"source":"../../src/data.ts","name":null,"original":{"line":126,"column":15},"generated":{"line":20,"column":24}},{"source":"../../src/data.ts","name":null,"original":{"line":126,"column":2},"generated":{"line":20,"column":25}},{"source":"../../src/data.ts","name":null,"original":{"line":127,"column":1},"generated":{"line":21,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":129,"column":6},"generated":{"line":23,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":129,"column":16},"generated":{"line":23,"column":9}},{"source":"../../src/data.ts","name":null,"original":{"line":129,"column":6},"generated":{"line":23,"column":20}},{"source":"../../src/data.ts","name":null,"original":{"line":129,"column":28},"generated":{"line":23,"column":21}},{"source":"../../src/data.ts","name":null,"original":{"line":129,"column":6},"generated":{"line":23,"column":25}},{"source":"../../src/data.ts","name":null,"original":{"line":129,"column":65},"generated":{"line":23,"column":27}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":2},"generated":{"line":24,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":9},"generated":{"line":24,"column":9}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":10},"generated":{"line":24,"column":10}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":11},"generated":{"line":24,"column":11}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":15},"generated":{"line":24,"column":15}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":16},"generated":{"line":24,"column":16}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":15},"generated":{"line":24,"column":22}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":9},"generated":{"line":24,"column":23}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":27},"generated":{"line":24,"column":27}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":28},"generated":{"line":24,"column":28}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":37},"generated":{"line":24,"column":37}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":38},"generated":{"line":24,"column":38}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":37},"generated":{"line":24,"column":42}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":9},"generated":{"line":24,"column":43}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":47},"generated":{"line":24,"column":47}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":48},"generated":{"line":24,"column":48}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":60},"generated":{"line":24,"column":60}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":61},"generated":{"line":24,"column":61}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":60},"generated":{"line":24,"column":65}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":9},"generated":{"line":24,"column":66}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":70},"generated":{"line":24,"column":70}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":71},"generated":{"line":24,"column":71}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":82},"generated":{"line":24,"column":82}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":83},"generated":{"line":24,"column":83}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":82},"generated":{"line":24,"column":87}},{"source":"../../src/data.ts","name":null,"original":{"line":130,"column":2},"generated":{"line":24,"column":88}},{"source":"../../src/data.ts","name":null,"original":{"line":131,"column":1},"generated":{"line":25,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":133,"column":6},"generated":{"line":27,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":133,"column":16},"generated":{"line":27,"column":9}},{"source":"../../src/data.ts","name":null,"original":{"line":133,"column":6},"generated":{"line":27,"column":20}},{"source":"../../src/data.ts","name":null,"original":{"line":133,"column":28},"generated":{"line":27,"column":21}},{"source":"../../src/data.ts","name":null,"original":{"line":133,"column":6},"generated":{"line":27,"column":25}},{"source":"../../src/data.ts","name":null,"original":{"line":133,"column":65},"generated":{"line":27,"column":27}},{"source":"../../src/data.ts","name":null,"original":{"line":134,"column":2},"generated":{"line":28,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":134,"column":9},"generated":{"line":28,"column":9}},{"source":"../../src/data.ts","name":null,"original":{"line":134,"column":13},"generated":{"line":28,"column":13}},{"source":"../../src/data.ts","name":null,"original":{"line":134,"column":18},"generated":{"line":28,"column":18}},{"source":"../../src/data.ts","name":null,"original":{"line":134,"column":37},"generated":{"line":28,"column":37}},{"source":"../../src/data.ts","name":null,"original":{"line":134,"column":38},"generated":{"line":28,"column":38}},{"source":"../../src/data.ts","name":null,"original":{"line":134,"column":37},"generated":{"line":28,"column":42}},{"source":"../../src/data.ts","name":null,"original":{"line":134,"column":18},"generated":{"line":28,"column":43}},{"source":"../../src/data.ts","name":null,"original":{"line":134,"column":47},"generated":{"line":28,"column":47}},{"source":"../../src/data.ts","name":null,"original":{"line":134,"column":64},"generated":{"line":28,"column":64}},{"source":"../../src/data.ts","name":null,"original":{"line":134,"column":65},"generated":{"line":28,"column":65}},{"source":"../../src/data.ts","name":null,"original":{"line":134,"column":64},"generated":{"line":28,"column":69}},{"source":"../../src/data.ts","name":null,"original":{"line":134,"column":18},"generated":{"line":28,"column":70}},{"source":"../../src/data.ts","name":null,"original":{"line":134,"column":74},"generated":{"line":28,"column":74}},{"source":"../../src/data.ts","name":null,"original":{"line":134,"column":94},"generated":{"line":28,"column":94}},{"source":"../../src/data.ts","name":null,"original":{"line":134,"column":95},"generated":{"line":28,"column":95}},{"source":"../../src/data.ts","name":null,"original":{"line":134,"column":94},"generated":{"line":28,"column":99}},{"source":"../../src/data.ts","name":null,"original":{"line":134,"column":13},"generated":{"line":28,"column":100}},{"source":"../../src/data.ts","name":null,"original":{"line":134,"column":2},"generated":{"line":28,"column":101}},{"source":"../../src/data.ts","name":null,"original":{"line":135,"column":1},"generated":{"line":29,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":137,"column":6},"generated":{"line":31,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":137,"column":16},"generated":{"line":31,"column":9}},{"source":"../../src/data.ts","name":null,"original":{"line":137,"column":6},"generated":{"line":31,"column":28}},{"source":"../../src/data.ts","name":null,"original":{"line":137,"column":36},"generated":{"line":31,"column":29}},{"source":"../../src/data.ts","name":null,"original":{"line":137,"column":6},"generated":{"line":31,"column":33}},{"source":"../../src/data.ts","name":null,"original":{"line":137,"column":73},"generated":{"line":31,"column":35}},{"source":"../../src/data.ts","name":null,"original":{"line":138,"column":2},"generated":{"line":32,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":138,"column":9},"generated":{"line":32,"column":9}},{"source":"../../src/data.ts","name":null,"original":{"line":138,"column":10},"generated":{"line":32,"column":10}},{"source":"../../src/data.ts","name":null,"original":{"line":138,"column":11},"generated":{"line":32,"column":11}},{"source":"../../src/data.ts","name":null,"original":{"line":138,"column":15},"generated":{"line":32,"column":15}},{"source":"../../src/data.ts","name":null,"original":{"line":138,"column":16},"generated":{"line":32,"column":16}},{"source":"../../src/data.ts","name":null,"original":{"line":138,"column":15},"generated":{"line":32,"column":26}},{"source":"../../src/data.ts","name":null,"original":{"line":138,"column":2},"generated":{"line":32,"column":27}},{"source":"../../src/data.ts","name":null,"original":{"line":139,"column":1},"generated":{"line":33,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":141,"column":6},"generated":{"line":35,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":141,"column":16},"generated":{"line":35,"column":9}},{"source":"../../src/data.ts","name":null,"original":{"line":141,"column":6},"generated":{"line":35,"column":26}},{"source":"../../src/data.ts","name":null,"original":{"line":141,"column":34},"generated":{"line":35,"column":27}},{"source":"../../src/data.ts","name":null,"original":{"line":141,"column":6},"generated":{"line":35,"column":31}},{"source":"../../src/data.ts","name":null,"original":{"line":141,"column":71},"generated":{"line":35,"column":33}},{"source":"../../src/data.ts","name":null,"original":{"line":142,"column":2},"generated":{"line":36,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":142,"column":9},"generated":{"line":36,"column":9}},{"source":"../../src/data.ts","name":null,"original":{"line":142,"column":10},"generated":{"line":36,"column":10}},{"source":"../../src/data.ts","name":null,"original":{"line":142,"column":11},"generated":{"line":36,"column":11}},{"source":"../../src/data.ts","name":null,"original":{"line":142,"column":15},"generated":{"line":36,"column":15}},{"source":"../../src/data.ts","name":null,"original":{"line":142,"column":16},"generated":{"line":36,"column":16}},{"source":"../../src/data.ts","name":null,"original":{"line":142,"column":15},"generated":{"line":36,"column":24}},{"source":"../../src/data.ts","name":null,"original":{"line":142,"column":2},"generated":{"line":36,"column":25}},{"source":"../../src/data.ts","name":null,"original":{"line":143,"column":1},"generated":{"line":37,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":145,"column":6},"generated":{"line":39,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":145,"column":16},"generated":{"line":39,"column":9}},{"source":"../../src/data.ts","name":null,"original":{"line":145,"column":6},"generated":{"line":39,"column":29}},{"source":"../../src/data.ts","name":null,"original":{"line":145,"column":37},"generated":{"line":39,"column":30}},{"source":"../../src/data.ts","name":null,"original":{"line":145,"column":6},"generated":{"line":39,"column":34}},{"source":"../../src/data.ts","name":null,"original":{"line":145,"column":74},"generated":{"line":39,"column":36}},{"source":"../../src/data.ts","name":null,"original":{"line":146,"column":2},"generated":{"line":40,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":146,"column":9},"generated":{"line":40,"column":9}},{"source":"../../src/data.ts","name":null,"original":{"line":146,"column":10},"generated":{"line":40,"column":10}},{"source":"../../src/data.ts","name":null,"original":{"line":146,"column":11},"generated":{"line":40,"column":11}},{"source":"../../src/data.ts","name":null,"original":{"line":146,"column":15},"generated":{"line":40,"column":15}},{"source":"../../src/data.ts","name":null,"original":{"line":146,"column":16},"generated":{"line":40,"column":16}},{"source":"../../src/data.ts","name":null,"original":{"line":146,"column":15},"generated":{"line":40,"column":27}},{"source":"../../src/data.ts","name":null,"original":{"line":146,"column":2},"generated":{"line":40,"column":28}},{"source":"../../src/data.ts","name":null,"original":{"line":147,"column":1},"generated":{"line":41,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":151,"column":7},"generated":{"line":43,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":151,"column":13},"generated":{"line":43,"column":6}},{"source":"../../src/data.ts","name":null,"original":{"line":151,"column":17},"generated":{"line":43,"column":10}},{"source":"../../src/data.ts","name":null,"original":{"line":151,"column":28},"generated":{"line":43,"column":13}},{"source":"../../src/data.ts","name":null,"original":{"line":151,"column":7},"generated":{"line":43,"column":19}},{"source":"../../src/data.ts","name":null,"original":{"line":152,"column":7},"generated":{"line":45,"column":0}},{"source":"../../src/data.ts","name":null,"original":{"line":152,"column":13},"generated":{"line":45,"column":6}},{"source":"../../src/data.ts","name":null,"original":{"line":152,"column":16},"generated":{"line":45,"column":9}},{"source":"../../src/data.ts","name":null,"original":{"line":152,"column":26},"generated":{"line":45,"column":12}},{"source":"../../src/data.ts","name":null,"original":{"line":152,"column":7},"generated":{"line":45,"column":17}}],"sources":{"../../src/data.ts":"/*\n * Constants and utilities for data.\n */\nimport {VgData} from './vega.schema';\nimport {FieldName} from './channeldef';\n\nexport type ParseValue = null | string | 'string' | 'boolean' | 'date' | 'number';\n\nexport interface Parse {\n  [field: string]: ParseValue;\n}\n\nexport interface DataFormatBase {\n  /**\n   * If set to `null`, disable type inference based on the spec and only use type inference based on the data.\n   * Alternatively, a parsing directive object can be provided for explicit data types. Each property of the object corresponds to a field name, and the value to the desired data type (one of `\"number\"`, `\"boolean\"`, `\"date\"`, or null (do not parse the field)).\n   * For example, `\"parse\": {\"modified_on\": \"date\"}` parses the `modified_on` field in each input record a Date value.\n   *\n   * For `\"date\"`, we parse data based using Javascript's [`Date.parse()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\n   * For Specific date formats can be provided (e.g., `{foo: \"date:'%m%d%Y'\"}`), using the [d3-time-format syntax](https://github.com/d3/d3-time-format#locale_format). UTC date format parsing is supported similarly (e.g., `{foo: \"utc:'%m%d%Y'\"}`). See more about [UTC time](https://vega.github.io/vega-lite/docs/timeunit.html#utc)\n   */\n  parse?: Parse | null;\n\n  /**\n   * Type of input data: `\"json\"`, `\"csv\"`, `\"tsv\"`, `\"dsv\"`.\n   *\n   * __Default value:__  The default format type is determined by the extension of the file URL.\n   * If no extension is detected, `\"json\"` will be used by default.\n   */\n  type?: 'csv' | 'tsv' | 'dsv' | 'json' | 'topojson';\n}\n\nexport interface CsvDataFormat extends DataFormatBase {\n  type?: 'csv' | 'tsv';\n}\n\nexport interface DsvDataFormat extends DataFormatBase {\n  type?: 'dsv';\n\n  /**\n   * The delimiter between records. The delimiter must be a single character (i.e., a single 16-bit code unit); so, ASCII delimiters are fine, but emoji delimiters are not.\n   *\n   * @minLength 1\n   * @maxLength 1\n   */\n  delimiter: string;\n}\n\nexport interface JsonDataFormat extends DataFormatBase {\n  type?: 'json';\n  /**\n   * The JSON property containing the desired data.\n   * This parameter can be used when the loaded JSON file may have surrounding structure or meta-data.\n   * For example `\"property\": \"values.features\"` is equivalent to retrieving `json.values.features`\n   * from the loaded JSON object.\n   */\n  property?: string;\n}\n\nexport interface TopoDataFormat extends DataFormatBase {\n  type?: 'topojson';\n  /**\n   * The name of the TopoJSON object set to convert to a GeoJSON feature collection.\n   * For example, in a map of the world, there may be an object set named `\"countries\"`.\n   * Using the feature property, we can extract this set and generate a GeoJSON feature object for each country.\n   */\n  feature?: string;\n  /**\n   * The name of the TopoJSON object set to convert to mesh.\n   * Similar to the `feature` option, `mesh` extracts a named TopoJSON object set.\n   *  Unlike the `feature` option, the corresponding geo data is returned as a single, unified mesh instance, not as individual GeoJSON features.\n   * Extracting a mesh is useful for more efficiently drawing borders or other geographic elements that you do not need to associate with specific regions such as individual countries, states or counties.\n   */\n  mesh?: string;\n}\n\nexport type DataFormat = CsvDataFormat | DsvDataFormat | JsonDataFormat | TopoDataFormat;\n\nexport type DataFormatType = 'json' | 'csv' | 'tsv' | 'dsv' | 'topojson';\n\nexport type DataSource = UrlData | InlineData | NamedData;\n\nexport type Data = DataSource | Generator;\n\nexport type InlineDataset = number[] | string[] | boolean[] | object[] | string | object;\n\nexport interface DataBase {\n  /**\n   * An object that specifies the format for parsing the data.\n   */\n  format?: DataFormat;\n  /**\n   * Provide a placeholder name and bind data at runtime.\n   */\n  name?: string;\n}\n\nexport interface UrlData extends DataBase {\n  /**\n   * An URL from which to load the data set. Use the `format.type` property\n   * to ensure the loaded data is correctly parsed.\n   */\n  url: string;\n}\n\nexport interface InlineData extends DataBase {\n  /**\n   * The full data set, included inline. This can be an array of objects or primitive values, an object, or a string.\n   * Arrays of primitive values are ingested as objects with a `data` property. Strings are parsed according to the specified format type.\n   */\n  values: InlineDataset;\n}\n\nexport interface NamedData extends DataBase {\n  /**\n   * Provide a placeholder name and bind data at runtime.\n   */\n  name: string;\n}\n\nexport function isUrlData(data: Partial<Data> | Partial<VgData>): data is UrlData {\n  return !!data['url'];\n}\n\nexport function isInlineData(data: Partial<Data> | Partial<VgData>): data is InlineData {\n  return !!data['values'];\n}\n\nexport function isNamedData(data: Partial<Data> | Partial<VgData>): data is NamedData {\n  return !!data['name'] && !isUrlData(data) && !isInlineData(data) && !isGenerator(data);\n}\n\nexport function isGenerator(data: Partial<Data> | Partial<VgData>): data is Generator {\n  return data && (isSequenceGenerator(data) || isSphereGenerator(data) || isGraticuleGenerator(data));\n}\n\nexport function isSequenceGenerator(data: Partial<Data> | Partial<VgData>): data is SequenceGenerator {\n  return !!data['sequence'];\n}\n\nexport function isSphereGenerator(data: Partial<Data> | Partial<VgData>): data is SphereGenerator {\n  return !!data['sphere'];\n}\n\nexport function isGraticuleGenerator(data: Partial<Data> | Partial<VgData>): data is GraticuleGenerator {\n  return !!data['graticule'];\n}\n\nexport type DataSourceType = 'raw' | 'main' | 'row' | 'column' | 'lookup';\n\nexport const MAIN: 'main' = 'main';\nexport const RAW: 'raw' = 'raw';\n\nexport type Generator = SequenceGenerator | SphereGenerator | GraticuleGenerator;\n\nexport interface GeneratorBase {\n  /**\n   * Provide a placeholder name and bind data at runtime.\n   */\n  name?: string;\n}\n\nexport interface SequenceGenerator extends GeneratorBase {\n  /**\n   * Generate a sequence of numbers.\n   */\n  sequence: SequenceParams;\n}\n\nexport interface SequenceParams {\n  /**\n   * The starting value of the sequence (inclusive).\n   */\n  start: number;\n  /**\n   * The ending value of the sequence (exclusive).\n   */\n  stop: number;\n  /**\n   * The step value between sequence entries.\n   *\n   * __Default value:__ `1`\n   */\n  step?: number;\n\n  /**\n   * The name of the generated sequence field.\n   *\n   * __Default value:__ `\"data\"`\n   */\n  as?: FieldName;\n}\n\nexport interface SphereGenerator extends GeneratorBase {\n  /**\n   * Generate sphere GeoJSON data for the full globe.\n   */\n  sphere: true | {};\n}\n\nexport interface GraticuleGenerator extends GeneratorBase {\n  /**\n   * Generate graticule GeoJSON data for geographic reference lines.\n   */\n  graticule: true | GraticuleParams;\n}\n\nexport interface GraticuleParams {\n  /**\n   * The major extent of the graticule as a two-element array of coordinates.\n   */\n  extentMajor?: number[][];\n\n  /**\n   * The minor extent of the graticule as a two-element array of coordinates.\n   */\n  extentMinor?: number[][];\n\n  /**\n   * Sets both the major and minor extents to the same values.\n   */\n  extent?: number[][];\n\n  /**\n   * The major step angles of the graticule.\n   *\n   *\n   * __Default value:__ `[90, 360]`\n   */\n  stepMajor?: number[];\n\n  /**\n   * The minor step angles of the graticule.\n   *\n   * __Default value:__ `[10, 10]`\n   */\n  stepMinor?: number[];\n\n  /**\n   * Sets both the major and minor step angles to the same values.\n   */\n  step?: number[];\n\n  /**\n   * The precision of the graticule in degrees.\n   *\n   * __Default value:__ `2.5`\n   */\n  precision?: number;\n}\n"},"lineCount":null}},"error":null,"hash":"62b905d1b656175e8b726e875180ae9f","cacheData":{"env":{}}}